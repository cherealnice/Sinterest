c
likeTarget
c
params
likeTarget
c
x
c
current_user.likes.where({likeable_id: 2, likeable_type: 'Sin'}).first
current_user.likes.where({likeable_id: 4, likeable_type: 'Sin'}).first
current_user.likes.where({likeable_id: 4, likeable_type: 'Sin'})
current_user.likes
current_user.likes.select!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.where!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.where!({likeable_id: 2, likeable_type: 'Sin'})
likeTarget
params
@like
current_user.likes.includes({likeable: Sin.find(2)}).blank?
current_user.likes.includes({likeable: Sin.find(2)}).length
current_user.likes.includes({likeable: Sin.find(9)}).empty?
current_user.likes.includes({likeable: Sin.find(5)}).empty?
current_user.likes.includes({likeable: Sin.find(5)})
current_user.likes.includes({likeable: Sin.find(2)})
current_user.likes.includes({likeable: Sin.find(2)}).to_a
current_user.likes.includes({likeable: Sin.find(2)}).first
current_user.likes.includes({likeable: Sin.find(2)})
current_user.likes.includes({likeable_id: 2, likeable_type: 'Sin'}).first
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'}).first
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes({likeable_id: 2, likeable_type: 'Sin'})
current_user.likes.inclues({likeable_id: 2, likeable_type: 'Sin'})
current_user.likes.inclues({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes
params
likeTarget
c
params
c
nnn
n
nn
n
s
params
c
like
def like
c
params
c
params
c
like
c
cc
c
like
c
Like.all
c
like
c
Like.all
like
like.destroy!
like
c
x
Like.all
like
like.destroy!
like
c
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
board.users_liked.destroy_all
current_user.users_liked
current_user.users_liked.destroy_all
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
board.users_liked.include(current_user)
current_user.likes.where({likeable_id: board.id, likeable_type: "Board"})
current_user.likes.includes({likeable_id: board.id, likeable_type: "Board"}).empty?
current_user.likes.includes({likeable_id: board.id, likeable_type: "Board"})
board.liked
c
current_user.likes
c
current_user.likes
current_user.likes.destroy_all
current_user.likes
like.destroy
like = current_user.likes.first
current_user.likes
c
params
current_user.likes
c
current_user.likes
like
c
current_user.liked_boards
Board.find(9).liked_boards
Board.find(9).likes
current_user.likes
c
current_user.likes.create!({likeable_id: id, likeable_type: type})
c
current_user.likes.create!({likeable_id: id, likeable_type: type})
current_user.create!({likeable_id: id, likeable_type: type})
c
current_user.likes.create!({likeable_id: id, likeable_type: type})
a.valid?
a = current_user.likes.new({likeable_id: id, likeable_type: type})
current_user.likes.new({likeable_id: id, likeable_type: type})
current_user.likes.create!({likeable_id: id, likeable_type: type})
current_user.likes.new({likeable_id: id, likeable_type: type})
like
c
current_user.likes.includes({likeable_id: id, likeable_type: type}).first
current_user.likes.includes({likeable_id: id, likeable_type: type})
like
c
params
c
params
c
params
c
board.id
json.id
json
self.class
self
c
cc
c
self.image
self.json
self
json
c
self.images.new({image: data})
self.images.create({image: data})
data.path
data
c
image
c
data.path
c
a.tempfile
a = params['sin']['image']
params['sin']['image']
params.image
params["image"]
params
params['image']
params.image
params
c
data
data.image
date
data.first
c
n
c
image
c
Board.find(params[:board_id])
c
data
c
Board.find(params[:boar
c
data
c
params
c
self.board
self.sin
self
data
c
data
c
data
c
ccc
c
sin
c
@sins
c
@sins
c
sin
c
Board.find(board_id).sins.to_a
Board.find(board_id).sins
@sins.to_a
@sins.as_json
@sins.to_a
@sins
c
@sins
c
@sins
c
n
c
sc
s
params[:boardIds]
c
params
c
x
sin
c
self.images.first
c
n
s
c
params
c
n
data
c
params
c
url.tempfile
url
c
params
c
params
c
params
c
params
c
params
c
x
