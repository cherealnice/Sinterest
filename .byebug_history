c
@sins
c
@sins.first.sins
@sins.first
@sins
c
params
c
params
c
params
c
params
c
params
c
x
params
c
User.find(params[:user][:id]).boards
User.find(params[:user][:id])
params
c
!!follow
follow
c
current_user.follows.where({followable_id: id,followable_type: type
followTarget
n
@follow.user
@follow
n
type
n
id
n
c
follow_params
params
c
follows.includes(followable: target).first
follows.includes(followable: target).empty?
c
follows.includes(followable: target).empty?
c
follows.includes(followable: target).empty?
c
follows.includes(followable: target).empty?
follows.includes(followable: target)
target
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
board.sins[(0..3)].map { |sin| asset_path(sin.image.url(:thumb)) }
board.sins
board.images
c
x
c
board.sins[(0..3)].map { |sin| asset_path(sin.image.url(:thumb)) }
c
board.sins
board.sins[(0..3)].map { |sin| asset_path(sin.image.url(:thumb)) }
board
c
User.find_by_credentials( params[:email], params[:password])
params
param
c
cx
x
params
User.find_by_credentials( params[:email], params[:password])
User.find_by_credentials( params[:email], params[:password]])
params
c
user.boards
c
user.boards
c
user.boards
user
c
reload!
User.first.boards
user.boards
user
c
current_user.followed_boards
@follow
c
followTarget
c
current_user.followed_boards.count
current_user.followed_boards
c
current_user.followed_boards
c
params
c
current_user.followed_boards
params
c
likeTarget
c
params
likeTarget
c
x
c
current_user.likes.where({likeable_id: 2, likeable_type: 'Sin'}).first
current_user.likes.where({likeable_id: 4, likeable_type: 'Sin'}).first
current_user.likes.where({likeable_id: 4, likeable_type: 'Sin'})
current_user.likes
current_user.likes.select!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.where!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.where!({likeable_id: 2, likeable_type: 'Sin'})
likeTarget
params
@like
current_user.likes.includes({likeable: Sin.find(2)}).blank?
current_user.likes.includes({likeable: Sin.find(2)}).length
current_user.likes.includes({likeable: Sin.find(9)}).empty?
current_user.likes.includes({likeable: Sin.find(5)}).empty?
current_user.likes.includes({likeable: Sin.find(5)})
current_user.likes.includes({likeable: Sin.find(2)})
current_user.likes.includes({likeable: Sin.find(2)}).to_a
current_user.likes.includes({likeable: Sin.find(2)}).first
current_user.likes.includes({likeable: Sin.find(2)})
current_user.likes.includes({likeable_id: 2, likeable_type: 'Sin'}).first
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'}).first
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes({likeable_id: 2, likeable_type: 'Sin'})
current_user.likes.inclues({likeable_id: 2, likeable_type: 'Sin'})
current_user.likes.inclues({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes
params
likeTarget
c
params
c
nnn
n
nn
n
s
params
c
like
def like
c
params
c
params
c
like
c
cc
c
like
c
Like.all
c
like
c
Like.all
like
like.destroy!
like
c
x
Like.all
like
like.destroy!
like
c
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
board.users_liked.destroy_all
current_user.users_liked
current_user.users_liked.destroy_all
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
c
board.users_liked.include?(current_user)
board.users_liked.include(current_user)
current_user.likes.where({likeable_id: board.id, likeable_type: "Board"})
current_user.likes.includes({likeable_id: board.id, likeable_type: "Board"}).empty?
current_user.likes.includes({likeable_id: board.id, likeable_type: "Board"})
board.liked
c
current_user.likes
c
current_user.likes
current_user.likes.destroy_all
current_user.likes
like.destroy
like = current_user.likes.first
current_user.likes
c
params
current_user.likes
c
current_user.likes
like
c
current_user.liked_boards
Board.find(9).liked_boards
Board.find(9).likes
current_user.likes
c
current_user.likes.create!({likeable_id: id, likeable_type: type})
c
current_user.likes.create!({likeable_id: id, likeable_type: type})
current_user.create!({likeable_id: id, likeable_type: type})
c
current_user.likes.create!({likeable_id: id, likeable_type: type})
a.valid?
a = current_user.likes.new({likeable_id: id, likeable_type: type})
current_user.likes.new({likeable_id: id, likeable_type: type})
current_user.likes.create!({likeable_id: id, likeable_type: type})
current_user.likes.new({likeable_id: id, likeable_type: type})
like
c
current_user.likes.includes({likeable_id: id, likeable_type: type}).first
current_user.likes.includes({likeable_id: id, likeable_type: type})
like
c
params
c
params
c
params
