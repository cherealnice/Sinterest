c
page
c
page
c
cc
c
cc
c
cc
c
cc
c
cc
c
sin.likes
sin
c
cc
c
cc
c
cc
c
cc
c
cc
c
cc
c
sin.user.likes
c
sin.comments
sin.image
sin
c
@sins.first.user
@sins.first.comments
@sins.first
c
@sins
c
Sin.includes(:sin_boards, :images, :user, :comments).select{ |s| sin_boards.any?{ |sb| s.sin_boards.include?(sb) }}c
Sin.includes(:sin_boards, :images, :user, :comments).select{ |s| sin_boards.any?{ |sb| s.sin_boards.include?(sb) }}
sin_boards = SinBoard.includes(:sin, :board).where(board_id: board_ids)
Sin.includes(:sin_boards, :images, :user, :comments).select{ |s| sin_boards.any?{ |sb| s.sin_boards.include?(sb) }}
sin_boards = SinBoard.includes(:sin, :board).where(board_id: board_ids)
Sin.includes(:sin_boards, :images, :user, :comments).select{ |s| sin_boards.any?{ |sb| s.sin_boards.include?(sb) }}
Sin.includes(:sin_boards, :images, :user, :comments).select( |s| sin_boards.any?{ |sb| s.sin_boards.include?(sb) }
Sin.includes(:sin_boards, :images, :user, :comments).select( |s| sin_boards.any?{ |sb| s.sin_boards.include = sb }
sin_boards = SinBoard.includes(:sins, :boards).where(board_id: board_ids)
Sin.where(sin_boards: sin_boards.sin_id)
Sin.where(sin_boards.sin_id: sin_boards)
sin_boards
Sin.where(sin_boards: sin_boards)
Sin.where(sin_board: sin_boards)
sin_boards = SinBoard.includes(:sins, :boards).where(board_id: board_ids)
Sin.includes(:sin_boards, :images, :user, :comments).where(sin_board: SinBoard.includes(:sins, :boards).where(board_id: board_ids))
SinBoard.includes(:sins, :boards).where(board_id: board_ids)
Sin.includes(:sin_boards, :images, :user, :comments)
Sin.includes(:sin_boards, :images, :user, :comments).select{|s| s.boards.any? {|b| board_ids.include?(b.id)}}
Sin.first.boards.
Sin.includes(:sin_boards, :images, :user, :comments).select{|s| s.boards.any? {|b| b.sins.include?(s)}}
Sin.includes(:sin_boards, :images, :user, :comments).select{|s| s.boards.sins.include?(s)}
Sin.includes(:sin_boards, :image, :user, :comments).select{|s| s.boards.sins.include?(s)}
boards.first.author
boards
c
cc
c
cc
c
cc
c
cc
c
@sins
c
@sins.first.sins
@sins.first
@sins
c
params
c
params
c
params
c
params
c
params
c
x
params
c
User.find(params[:user][:id]).boards
User.find(params[:user][:id])
params
c
!!follow
follow
c
current_user.follows.where({followable_id: id,followable_type: type
followTarget
n
@follow.user
@follow
n
type
n
id
n
c
follow_params
params
c
follows.includes(followable: target).first
follows.includes(followable: target).empty?
c
follows.includes(followable: target).empty?
c
follows.includes(followable: target).empty?
c
follows.includes(followable: target).empty?
follows.includes(followable: target)
target
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
current_user.follows?(board)
c
board.sins[(0..3)].map { |sin| asset_path(sin.image.url(:thumb)) }
board.sins
board.images
c
x
c
board.sins[(0..3)].map { |sin| asset_path(sin.image.url(:thumb)) }
c
board.sins
board.sins[(0..3)].map { |sin| asset_path(sin.image.url(:thumb)) }
board
c
User.find_by_credentials( params[:email], params[:password])
params
param
c
cx
x
params
User.find_by_credentials( params[:email], params[:password])
User.find_by_credentials( params[:email], params[:password]])
params
c
user.boards
c
user.boards
c
user.boards
user
c
reload!
User.first.boards
user.boards
user
c
current_user.followed_boards
@follow
c
followTarget
c
current_user.followed_boards.count
current_user.followed_boards
c
current_user.followed_boards
c
params
c
current_user.followed_boards
params
c
likeTarget
c
params
likeTarget
c
x
c
current_user.likes.where({likeable_id: 2, likeable_type: 'Sin'}).first
current_user.likes.where({likeable_id: 4, likeable_type: 'Sin'}).first
current_user.likes.where({likeable_id: 4, likeable_type: 'Sin'})
current_user.likes
current_user.likes.select!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.where!({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.where!({likeable_id: 2, likeable_type: 'Sin'})
likeTarget
params
@like
current_user.likes.includes({likeable: Sin.find(2)}).blank?
current_user.likes.includes({likeable: Sin.find(2)}).length
current_user.likes.includes({likeable: Sin.find(9)}).empty?
current_user.likes.includes({likeable: Sin.find(5)}).empty?
current_user.likes.includes({likeable: Sin.find(5)})
current_user.likes.includes({likeable: Sin.find(2)})
current_user.likes.includes({likeable: Sin.find(2)}).to_a
current_user.likes.includes({likeable: Sin.find(2)}).first
current_user.likes.includes({likeable: Sin.find(2)})
current_user.likes.includes({likeable_id: 2, likeable_type: 'Sin'}).first
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'}).first
current_user.likes.includes({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes.includes({likeable_id: 2, likeable_type: 'Sin'})
current_user.likes.inclues({likeable_id: 2, likeable_type: 'Sin'})
current_user.likes.inclues({likeable_id: 5, likeable_type: 'Sin'})
current_user.likes
params
likeTarget
c
params
c
nnn
n
nn
n
s
params
c
like
def like
c
params
c
params
c
like
c
cc
c
like
c
Like.all
